plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.beryx.runtime' version '1.11.2'
}

version = $version
repositories {
    mavenCentral()
    maven {
        url = uri("https://www.dcm4che.org/maven2/")
    }
    // For org.weasis.core:weasis-core-img:4.3.0
    maven {
        url = uri("https://github.com/nroduit/mvn-repo/raw/master")
    }
}
javafx {
    version = '14'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

jar {
    from('src/main/resources') {
        include  '**/*.*'
    }
}
application {
    mainClassName = "science.giraffe.foggydicom.Launcher"
    applicationName = 'FoggyDicom'
}

dependencies {
    compile "org.dcm4che.tool:dcm4che-tool-dcm2jpg:5.22.3"

    implementation 'com.jfoenix:jfoenix:9.0.10'

    compile 'javax.annotation:javax.annotation-api:1.3.2'
    compile 'javax.inject:javax.inject:1'

    // NOTE: the latest version _is_ 8.0.1!
    // 8.0.7 was published by mistake
    compile 'io.datafx:datafx:8.0.1'
    compile 'io.datafx:flow:8.0.1'

    // FontAwesome
    // Versions higher than 2.x are for Java 11
    compile 'org.kordamp.ikonli:ikonli-javafx:2.4.0'
    compile 'org.kordamp.ikonli:ikonli-fontawesome5-pack:2.4.0'

    compile fileTree(dir: 'gradle', include: '*.jar')
}

run{
    jvmArgs = [
            "--add-exports=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED",
            "--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED",
            "--add-exports=javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED",
            "--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED",
            "--illegal-access=warn",
            "--add-opens=javafx.controls/javafx.scene.control.skin=com.jfoenix",
            "--add-opens=java.base/java.lang.reflect=ALL-UNNAMED",
            "--add-opens=java.base/java.lang.reflect=com.jfoenix"
    ]
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        noConsole = true
    }
    jpackage {
        if(org.gradle.internal.os.OperatingSystem.current().windows) {
            imageOptions = ["--icon", "src/main/resources/FoggyDicom.ico"]
        } else {
            imageOptions = ["--icon", "src/main/resources/FoggyDicom.icns"]
        }
        if(org.gradle.internal.os.OperatingSystem.current().windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
    }
}
